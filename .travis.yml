dist:     trusty    # используем Ubuntu 14.04 Trusty Tahr (а не 12.02 Precise Pangolin)
sudo:     required  # используем Virtual Machine (а не Docker container)

language: c
os:
  - linux
  - osx

compiler:
  - gcc
  - clang

addons:
  apt:
    packages:
      - valgrind
      - cppcheck
      - make
      - cmake
      - lcov


env:
  # список переменных окружения, влияющих на матрицу сборки:
  - TARGET_CPU=amd64 BUILD_CONFIGURATION=Debug
  - TARGET_CPU=amd64 BUILD_CONFIGURATION=Release
  - TARGET_CPU=x86 BUILD_CONFIGURATION=Debug
  - TARGET_CPU=x86 BUILD_CONFIGURATION=Release


matrix:
  exclude:
    # вручную исключим ненужные элементы из матрицы сборки:
    - os:       osx
      compiler: gcc

    - os:  osx
      env: TARGET_CPU=x86 BUILD_CONFIGURATION=Debug

    - os:  osx
      env: TARGET_CPU=x86 BUILD_CONFIGURATION=Release


script:
  # скрипт сборки и тестирования проекта:
  - cd DZ1
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DTARGET_CPU=$TARGET_CPU -DCMAKE_C_FLAGS="--coverage" -DCMAKE_CXX_FLAGS="--coverage"
  - cmake --build .
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "${CC_FOR_BUILD}" =~ gcc$ ]]; then valgrind --tool=memcheck --leak-check=yes ./Google_tests/Google_Tests_run; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "${CC_FOR_BUILD}" =~ gcc$пше ]]; then lcov --capture --directory . --output-file coverage.info; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "${CC_FOR_BUILD}" =~ gcc$ ]]; then bash <(curl -s https://codecov.io/bash); fi
  - cd ..
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cppcheck --enable=warning,performance,information *.c; fi

